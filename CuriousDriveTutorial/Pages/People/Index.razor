@page "/people"
@inject HttpClient  httpClient

<h3>People</h3>

<a href="/people/create">Create</a>
<br />
@if (people == null)
{
    <div class="row">
        <div class="col-12 alert alert-info">
            Loading...
        </div>
    </div>
}

@if (people != null && people.Length == 0)
{
    <div class="row">
        <div class="col-12 alert alert-warning">
            <text>No people have been added to this database.</text>
        </div>
    </div>
}


@if (people != null)
{
    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>Title</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Phone Number</th>
                <th>Email ID</th>
                <th>Address</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Person person in people)
            {
            <tr>
                <td>@person.ID</td>
                <td>@person.Title</td>
                <td>@person.FirstName</td>
                <td>@person.LastName</td>
                <td>@person.PhoneNumber</td>
                <td>@person.Email</td>
                <td>@person.Address</td>
                <td><a>Edit</a><button>Delete</button></td>
            </tr>
            }
        </tbody>
    </table>
}


@code {
    Person[] people { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //await LoadPeople();
        people = await httpClient.GetFromJsonAsync<Person[]>("api/people");
    }
    //async Task LoadPeople()=>people = await httpClient.GetFromJsonAsync<Person[]>("api/people");

}
